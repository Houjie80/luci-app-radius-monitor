name: Build IPK
on:
  push:
    branches:
      - master
    paths:
      - 'luci-app-radmon-php7/Makefile'
      - 'luci-app-radmon-php8/Makefile'
  workflow_dispatch:

jobs:
  build:
    name: Build Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: [php7, php8]
    
    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: 🛠️ Set up build environment
        run: |
          echo -e "\033[34m🔨 Preparing build environment \033[0m"
          sudo -E apt-get update > /dev/null 2>&1
          sudo -E apt-get install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget > /dev/null 2>&1
          sudo -E apt-get autoremove --purge > /dev/null 2>&1
          sudo -E apt-get clean > /dev/null 2>&1

          echo -e "\033[34m🔧 Configuring environment for ${{ matrix.php_version }} \033[0m"
          PKG_NAME=luci-app-radmon-${{ matrix.php_version }}
          PKG_VER=$(grep 'PKG_VERSION:=' $PKG_NAME/Makefile | awk -F '=' '{print $2}' | tr -d ' ')
          export TERM=xterm
          echo "PKG_VER=$PKG_VER" >> $GITHUB_ENV
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV
          echo -e "\033[34m\t📦 PKG_NAME:\033[37m $PKG_NAME \033[0m"
          echo -e "\033[34m\t🔖 PKG_VER:\033[37m $PKG_VER \033[0m"
          echo -e "\033[34m\t💻 TERM:\033[37m xterm \033[0m"

      - name: 📦 Set up resources
        run: |
          echo -e "\033[34m🗂️ Downloading SDK OpenWRT \033[0m"
          curl -s -L https://downloads.openwrt.org/releases/23.05.4/targets/x86/64/openwrt-sdk-23.05.4-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz -o sdk.tar.xz
          mkdir sdk && tar -xf sdk.tar.xz -C sdk --strip-components=1

          echo -e "\033[34m📦 Cloning ${{ matrix.php_version }} package \033[0m"
          git clone -q https://github.com/${{ github.repository }} sdk/package/tmp
          mv sdk/package/tmp/${PKG_NAME} sdk/package/
          rm -rf sdk/package/tmp

      - name: 📡 Set up SDK feeds
        run: |
          echo -e "\033[34m🔍 Updating SDK feeds \033[0m"
          cd sdk
          ./scripts/feeds update -a > /dev/null 2>&1
          ./scripts/feeds install -a > /dev/null 2>&1

      - name: ⚙️ Configure & compile IPK
        run: |
          echo -e "\033[34m🔧 Configuring SDK \033[0m"
          cd sdk && make defconfig > /dev/null 2>&1
          rm -rf feeds/luci/contrib/package/csstidy
          sed -i '/^CONFIG_LUCI_JSMIN=/d' .config
          sed -i '/^CONFIG_LUCI_CSSTIDY=/d' .config

          echo -e "\033[34m🔨 Compiling ${PKG_NAME} package \033[0m"
          make package/${PKG_NAME}/{clean,compile} -j$(nproc) > /dev/null 2>&1

      - name: ⬇️ Save IPK path
        id: save_ipk_path  # Menetapkan ID untuk langkah ini
        run: |
          PKG_PATH=$(find sdk/bin/packages/x86_64/luci/ -name "luci-app-radmon-${{ matrix.php_version }}*.ipk")
          echo "PKG_PATH=$PKG_PATH" >> $GITHUB_ENV
          echo "PKG_FILE=$(basename "$PKG_PATH")" >> $GITHUB_ENV
          echo "::set-output name=${{ matrix.php_version }}_PKG_PATH::$PKG_PATH"  # Menyimpan output
          echo "::set-output name=${{ matrix.php_version }}_PKG_FILE::$(basename "$PKG_PATH")"  # Menyimpan output

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: 📋 Debug Environment Variables
        run: |
          echo "php7_PKG_PATH=${{ needs.build.outputs.php7_PKG_PATH }}"
          echo "php8_PKG_PATH=${{ needs.build.outputs.php8_PKG_PATH }}"
          echo "php7_PKG_FILE=${{ needs.build.outputs.php7_PKG_FILE }}"
          echo "php8_PKG_FILE=${{ needs.build.outputs.php8_PKG_FILE }}"

      - name: 🚀 Generate new tag & release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          name: ${{ env.release_name }}
          tag_name: ${{ env.tag_name }}
          draft: false
          prerelease: false
          files: |
            ${{ needs.build.outputs.php7_PKG_FILE }}
            ${{ needs.build.outputs.php8_PKG_FILE }}
          body: |
            ### Changelog ${{ env.tag_name }}

      - name: 📬 Send notification to Telegram
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=New release created for luci-app-radmon"
