name: Compile IPK

on:
  push:
    paths:
      - 'luci-app-radmon-php7/Makefile'
      - 'luci-app-radmon-php8/Makefile'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup environment
      run: |
        sudo -E apt-get update > /dev/null 2>&1
        sudo -E apt-get install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget > /dev/null 2>&1
        sudo -E apt-get autoremove --purge > /dev/null 2>&1
        sudo -E apt-get clean > /dev/null 2>&1
        wget https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz  > /dev/null 2>&1
        tar xJf openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz  > /dev/null 2>&1
        mv openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64 sdk  > /dev/null 2>&1

    - name: Setup feeds
      run: |
        cd sdk
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Get Radmon PHP7
      id: get_radmon_php7
      run: |
        cd luci-app-radmon-php7
        echo "radmon_php7=$(grep 'PKG_VERSION:=' Makefile | awk -F '=' '{print $2}' | tr -d ' ')" >> $GITHUB_OUTPUT

    - name: Prepare Radmon PHP7
      run: |
        cd openwrt-sdk
        mkdir -p package/luci-app-radmon-php7
        cp -R ../luci-app-radmon-php7/* package/luci-app-radmon-php7/

    - name: Build Radmon PHP7
      id: build_php7
      run: |
        cd sdk && make defconfig
        sed -i 's/CONFIG_LUCI_SRCDIET=y/# CONFIG_LUCI_SRCDIET is not set/' .config
        sed -i 's/CONFIG_LUCI_JSMIN=y/# CONFIG_LUCI_JSMIN is not set/' .config
        sed -i 's/CONFIG_LUCI_CSSTIDY=y/# CONFIG_LUCI_CSSTIDY is not set/' .config
        sed -i 's/# CONFIG_NO_STRIP is not set/CONFIG_NO_STRIP=y/' .config
        sed -i 's/CONFIG_USE_STRIP=y/# CONFIG_USE_STRIP is not set/' .config
        sed -i 's/CONFIG_USE_SSTRIP=y/# CONFIG_USE_SSTRIP is not set/' .config
        make package/luci-app-radmon-php7/compile V=s -j$(nproc) || echo "BUILD_FAILED=true" >> $GITHUB_ENV
        if [ "${{ env.BUILD_FAILED }}" != "true" ]; then
          mv bin/packages/x86_64/base/luci-app-radmon-php7*.ipk ../luci-app-radmon-php7_${{ steps.get_radmon_php7.outputs.radmon_php7 }}_all.ipk
        fi

    - name: Get Ramon PHP8
      id: get_radmon_php8
      run: |
        cd luci-app-radmon-php8
        echo "radmon_php8=$(grep 'PKG_VERSION:=' Makefile | awk -F '=' '{print $2}' | tr -d ' ')" >> $GITHUB_OUTPUT

    - name: Prepare Radmon PHP8
      run: |
        cd openwrt-sdk
        mkdir -p package/luci-app-radmon-php8
        cp -R ../luci-app-radmon-php8/* package/luci-app-radmon-php8/

    - name: Build Radmon PHP8
      id: build_php8
      run: |
        cd sdk && make defconfig
        sed -i 's/CONFIG_LUCI_SRCDIET=y/# CONFIG_LUCI_SRCDIET is not set/' .config
        sed -i 's/CONFIG_LUCI_JSMIN=y/# CONFIG_LUCI_JSMIN is not set/' .config
        sed -i 's/CONFIG_LUCI_CSSTIDY=y/# CONFIG_LUCI_CSSTIDY is not set/' .config
        sed -i 's/# CONFIG_NO_STRIP is not set/CONFIG_NO_STRIP=y/' .config
        sed -i 's/CONFIG_USE_STRIP=y/# CONFIG_USE_STRIP is not set/' .config
        sed -i 's/CONFIG_USE_SSTRIP=y/# CONFIG_USE_SSTRIP is not set/' .config
        make package/luci-app-radmon-php8/compile V=s -j$(nproc) || echo "BUILD_FAILED=true" >> $GITHUB_ENV
        if [ "${{ env.BUILD_FAILED }}" != "true" ]; then
          mv bin/packages/x86_64/base/luci-app-radmon-php8*.ipk ../luci-app-radmon-php8_${{ steps.get_radmon_php8.outputs.radmon_php8 }}_all.ipk
        fi
    
    - name: Check Existing Release
      id: check_release
      run: |
        if [ -n "${{ steps.get_radmon_php7.outputs.radmon_php7 }}" ]; then
          php7_exists=$(curl -s -o /dev/null -w "%{http_code}" https://github.com/${{ github.repository }}/releases/download/${{ steps.get_radmon_php7.outputs.radmon_php7 }}/luci-app-radmon-php7_${{ steps.get_radmon_php7.outputs.radmon_php7 }}_all.ipk)
          echo "php7_exists=${php7_exists}" >> $GITHUB_OUTPUT
        else
          echo "php7_exists=404" >> $GITHUB_OUTPUT
        fi
        if [ -n "${{ steps.get_radmon_php8.outputs.radmon_php8 }}" ]; then
          php8_exists=$(curl -s -o /dev/null -w "%{http_code}" https://github.com/${{ github.repository }}/releases/download/${{ steps.get_radmon_php8.outputs.radmon_php8 }}/luci-app-radmon-php8_${{ steps.get_radmon_php8.outputs.radmon_php8 }}_all.ipk)
          echo "php8_exists=${php8_exists}" >> $GITHUB_OUTPUT
        else
          echo "php8_exists=404" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      if: env.BUILD_FAILED != 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        release_date=$(date +'%y%m%d')
        release_name="${{ steps.get_radmon_php7.outputs.radmon_php7 }}"
        release_tag="${release_date}"

        gh release create "$release_tag" \
          --title "$release_name" \
          --generate-notes=false

    - name: Upload PHP7 IPK
      if: env.BUILD_FAILED != 'true' && steps.check_release.outputs.php7_exists != '200'
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        gh release upload ${{ steps.get_radmon_php7.outputs.radmon_php7 }} \
          ./luci-app-radmon-php7_${{ steps.get_radmon_php7.outputs.radmon_php7 }}_all.ipk

    - name: Upload PHP8 IPK
      if: env.BUILD_FAILED != 'true' && steps.check_release.outputs.php8_exists != '200'
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        gh release upload ${{ steps.get_radmon_php8.outputs.radmon_php8 }} \
          ./luci-app-radmon-php8_${{ steps.get_radmon_php8.outputs.radmon_php8 }}_all.ipk
